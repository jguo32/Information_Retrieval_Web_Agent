#!/usr/bin/perl
use Carp;
use FileHandle;

my $DIR = ".";

my $file_name      = "interactive";
my $raw_file       = "$file_name\.raw";
my $stemmed_file   = "$file_name\.stemmed";
my $tokened_file   = "$file_name\.tokenized";
my $stem_hist_file = "$file_name\.stemmed\.hist";
my $tokn_hist_file = "$file_name\.tokenized\.hist";

print "\n\nINTERACTIVE QUERY:\n\n";
print "Please enter your query.  Press [Enter] on a line\n"; 
print "by itself to finish entering your query:\n\n";  

$query_text ="";
$line_no = 1;

print "Query (1):  ";
while(($curr_line = <STDIN>) ne "\n") {
  $query_text=$query_text.$curr_line;
  $line_no++;
  print "Query ($line_no):  "
}
chomp $query_text;


print "\n\nPlease enter the names of any authors you wish to search\n"; 
print "for, one per line.  Press [Enter] on a line by itself when\n";
print "you're finished:\n\n";


$author_text ="";
$line_no = 1;

print "Author (1):  ";
while(($curr_line = <STDIN>) ne "\n") {
  $author_text=$author_text.$curr_line;
  $line_no++;
  print "Author ($line_no):  "
}
chomp $author_text;


# Now we need to save the query to the raw file, and run the necessary
# tokenizing tools on this file. 

$lst_query_idx = 1;

print "\n\nSaving query to 'interactive.raw'\n";

open(RAWFILE, ">$raw_file");

print RAWFILE "\.I $lst_query_idx\n";

if($query_text ne "") {
  print RAWFILE ".W\n";
  print RAWFILE "$query_text\n";
}
if($author_text ne "") { 
  print RAWFILE ".A\n";
  print RAWFILE "$author_text\n";
}
print RAWFILE "\n\n";

close(RAWFILE);

my $stem_com = "$DIR/stemmer/nstemmer $raw_file > $stemmed_file";
#my $tokn_com = "$DIR/tokenize $file_name";

my $stem_hist_com = "cat $stemmed_file | perl $DIR/make_hist.prl > $stem_hist_file";
my $tokn_hist_com = "cat $tokened_file | perl $DIR/make_hist.prl > $tokn_hist_file";

print "Tokenizing and stemming query.\n";

system $stem_com and die "Failed $DIR/stemmer/nstemmer: $!\n";
&tokenize;
#system $tokn_com and die "Failed $DIR/tokenize: $!\n";

print "Making histogram of the query.\n\n";

system $stem_hist_com and die "Failed $DIR/make_hist.prl: $!\n";
system $tokn_hist_com and die "Failed $DIR/make_hist.prl: $!\n";

sub tokenize {
	my $token_fh = new FileHandle $raw_file, "r" 
	or croak "Failed $raw_file";
	
	my @words = ();
	my $line = undef;
	open(TOKENFILE, ">$tokened_file");
    while (defined( $line = <$token_fh> )) {

		# so on my computer split will return a first element of undef 
		# if the leading characters are white space, so I eat the white
		# space to insure that the split works right.
		chomp $line;
		if ($line =~ /^\.[IWA]/) {
			print TOKENFILE "$line\n";
			next;
		}
		
		@words = split(/\s+/, $line);
		foreach $word ($words) {
			print TOKENFILE "$word\n";
		}
		@words = ();
    }
	close(TOKENFILE);

}

exit(0);
